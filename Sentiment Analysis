If(
    !IsBlank(Keyph.HtmlText),
    If(
    'Sentiment analysis'.Predict(Keyph.HtmlText).Document.TopSentiment.Name = "Positive",
    "ðŸ¤©",
    If(
        'Sentiment analysis'.Predict(Keyph.HtmlText).Document.TopSentiment.Name = "Negative",
        "ðŸ˜’",
        "ðŸ™‚"
    )
))

This **Power Fx formula** in Power Apps is performing **sentiment analysis** on the text and returning an emoji based on the detected sentiment.  

### **Breakdown of the Formula**  

#### **Step 1: Check if Input is Not Blank**  
```PowerApps
If(!IsBlank(Keyph.HtmlText),
```
- Ensures that the input text (`Keyph.HtmlText`) is **not empty** before running sentiment analysis.  
- If it is blank, the formula does nothing (returns nothing).  

#### **Step 2: Perform Sentiment Analysis**  
```PowerApps
'Sentiment analysis'.Predict(Keyph.HtmlText).Document.TopSentiment.Name
```
- Calls the **Sentiment Analysis** AI model (`'Sentiment analysis'.Predict(...)`).  
- Extracts the **top sentiment** (`.Document.TopSentiment.Name`).  
- This returns one of the sentiment categories: `"Positive"`, `"Negative"`, or `"Neutral"`.  

#### **Step 3: Assign an Emoji Based on Sentiment**  
```PowerApps
If(
    'Sentiment analysis'.Predict(Keyph.HtmlText).Document.TopSentiment.Name = "Positive",
    "ðŸ¤©",
    If(
        'Sentiment analysis'.Predict(Keyph.HtmlText).Document.TopSentiment.Name = "Negative",
        "ðŸ˜’",
        "ðŸ™‚"
    )
)
```
- If **sentiment is `"Positive"`**, return `"ðŸ¤©"` (happy face).  
- If **sentiment is `"Negative"`**, return `"ðŸ˜’"` (disappointed face).  
- If it's neither (likely `"Neutral"`), return `"ðŸ™‚"` (neutral face).  

### **Final Behavior of the Formula**  
- If `Keyph.HtmlText` is blank â†’ No emoji is returned.  
- If the text is positive â†’ Displays `"ðŸ¤©"`.  
- If the text is negative â†’ Displays `"ðŸ˜’"`.  
- Otherwise (neutral) â†’ Displays `"ðŸ™‚"`.  


